plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
//    id 'org.jetbrains.kotlin.plugin.compose'
    id 'org.jetbrains.dokka' version "2.0.0"
    id 'org.jetbrains.kotlin.plugin.compose'
    id "io.gitlab.arturbosch.detekt"
}

android {
    namespace 'com.adham.gini.weatherginisdk'
    compileSdk 35

    defaultConfig {
        minSdk 30
        targetSdk 35
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

//    defaultConfig {
//        testInstrumentationRunner = "androidx.benchmark.junit4.AndroidBenchmarkRunner"
//    }
//
//    testOptions {
//        managedDevices {
//            devices {
//                pixel2Api30(com.android.build.api.dsl.ManagedVirtualDevice::class) {
//                    device = "Pixel 2"
//                    apiLevel = 30
//                    systemImageSource = "aosp"
//                }
//            }
//        }
//    }
//
    testOptions {
        unitTests.includeAndroidResources = true
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.8.0-alpha02"
    }


    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += 'META-INF/NOTICE.md'
            excludes += 'META-INF/LICENSE.md'
            excludes += 'META-INF/LICENSE-notice.md'
            excludes += 'mockito-extensions/org.mockito.plugins.MemberAccessor'
            excludes += 'mockito-extensions/org.mockito.plugins.MockMaker'
        }
    }


}

dependencies {

    //region Support Packages
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.22')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.7'
    implementation 'androidx.activity:activity-compose:1.10.0'
    implementation platform('androidx.compose:compose-bom:2025.01.00')
    implementation "androidx.navigation:navigation-compose:2.8.5"

    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    //    // Optional - Integration with LiveData
    implementation "androidx.compose.runtime:runtime-livedata:1.7.6"
    testImplementation 'org.junit.jupiter:junit-jupiter'
    //endregion

    //region Retrofit
    // Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.9.3'

    var retrofitVersion = "2.11.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:4.12.0" //
    //endregion


    //region Koin
    def koinVersion = '3.4.3'
    implementation "io.insert-koin:koin-core:$koinVersion"
    implementation "io.insert-koin:koin-android:$koinVersion"
    implementation "io.insert-koin:koin-androidx-compose:$koinVersion"
    //endregion


    //region Testing package
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2025.01.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'


// Koin dependencies
    androidTestImplementation("io.insert-koin:koin-test:$koinVersion") // Koin testing tools
//            {
//                exclude group: 'org.mockito'
//            }
    testImplementation "io.insert-koin:koin-test:$koinVersion" // Koin testing tools
    debugImplementation "io.insert-koin:koin-test:$koinVersion" // Koin testing tools
//    androidTestImplementation "org.koin:koin-test:$koinVersion"
//    implementation 'org.koin:koin-android:2.0.1'
//    testImplementation 'org.koin:koin-test:2.0.1'

    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation "androidx.test:core:1.6.1"
    testImplementation "androidx.test:core:1.6.1"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3"
    testImplementation "androidx.arch.core:core-testing:2.2.0"

    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestUtil 'androidx.test:orchestrator:1.5.1'

    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.15.3'

    // Having the actual dependency helps, instead of removing it by accident
    // when adding the fix originally present, which is also not needed anymore.


//    testImplementation 'org.mockito.kotlin:mockito-kotlin:5.4.0'
//    androidTestImplementation 'org.mockito.kotlin:mockito-kotlin:5.4.0'

    implementation "io.mockk:mockk-android:1.13.5"
//    implementation "io.mockk:mockk:1.13.5"
//    implementation "org.mockito:mockito-core:5.15.2" // For pure unit tests
//    implementation "org.mockito:mockito-inline:5.2.0" // For final classes or static methods
//    implementation "org.mockito:mockito-android:5.15.2"
//    implementation("org.mockito:mockito-android:")

//    testImplementation "io.mockk:mockk:1.13.5"
//    testImplementation "org.mockito:mockito-core:5.15.2" // For pure unit tests
//    testImplementation "org.mockito:mockito-inline:5.2.0" // For final classes or static methods
//    testImplementation "org.mockito:mockito-android:5.5.0"
//    testImplementation "org.mockito:mockito-android:5.15.2"


    testImplementation "io.mockk:mockk:1.13.5"
    androidTestImplementation "io.mockk:mockk-android:1.13.5"
//    androidTestImplementation "io.mockk:mockk:1.13.5"
//    androidTestImplementation "org.mockito:mockito-core:5.15.2" // For pure unit tests
//    androidTestImplementation "org.mockito:mockito-inline:5.2.0"
    // For final classes or static methods
//    androidTestImplementation "org.mockito:mockito-android:5.5.0"
//    androidTestImplementation "org.mockito:mockito-android:5.15.2"
//    androidTestImplementation 'com.squareup.retrofit2:retrofit-mock:2.11.0'


//    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC3'
//    testImplementation ("org.mockito.kotlin:mockito-kotlin:$latest_version")

    // For Android instrumentation tests

    //Robolectric: For UI-related ViewModel tests (e.g., testing interactions with UI elements).
    //Truth: A fluent testing library, often used with Google libraries.
    testImplementation "com.google.truth:truth:1.1.5"

    testImplementation("app.cash.paparazzi:paparazzi:1.2.0")
    testImplementation("androidx.compose.ui:ui-test-junit4:1.7.7")
    // https://mvnrepository.com/artifact/com.squareup/kotlinpoet
    runtimeOnly("com.squareup:kotlinpoet:2.0.0")

    implementation("androidx.benchmark:benchmark-macro:1.4.0-alpha07")
    androidTestImplementation("androidx.benchmark:benchmark-macro:1.4.0-alpha07")
    androidTestImplementation("androidx.benchmark:benchmark-junit4:1.3.3")
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.7.7")


    //archunit
    testImplementation 'com.tngtech.archunit:archunit:1.1.0'
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.1.0' // If using JUnit 5

    //konsist
    testImplementation 'com.lemonappdev:konsist:0.17.3' // Use the latest version

    //endregion

}

subprojects {
    apply plugin: 'org.jetbrains.dokka'
}

dokka {
    moduleName.set("WeatherGiniSDK")
    dokkaPublications.html {
        outputDirectory.set(layout.buildDirectory.dir("dokkaDir"))
    }

    dokkaSourceSets.main {
        // Only set the actual Kotlin/Java dirs once
        sourceRoots.from("src/main/java")
//    dokkaSourceSets.named("main") {
        includes.from("IntegrationGuide.md")
        skipEmptyPackages.set(true)
//        includeNonPublic.set(false)
//        includes.from("IntegrationGuide.md")
        sourceLink {
//            localDirectory.set(file("src/main/java"))
            remoteUrl("https://github.com/adhamkhwaldeh/WeatherSdk/tree/main/app/src/main/java")
            remoteLineSuffix.set("#L")
        }

        reportUndocumented.set(true)          // Warn about undocumented public APIs
        skipDeprecated.set(true)              // Exclude deprecated elements
        suppress.set(false)                   // Include suppressed elements
        sourceRoots.from(file("src/main/java"))
        sourceRoots.from("src/main/java")
        jdkVersion.set(17)
    }

}
