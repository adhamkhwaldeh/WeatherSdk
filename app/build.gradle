plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
//    id 'org.jetbrains.kotlin.plugin.compose'
    id 'org.jetbrains.dokka' version "2.0.0"
    id 'org.jetbrains.kotlin.plugin.compose'
}
android {
    namespace 'com.adham.gini.weatherSDK'
    compileSdk 35

    defaultConfig {
        applicationId "com.adham.gini.weatherSDK"
        minSdk 30
        targetSdk 35
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.8.0-alpha02"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += 'META-INF/NOTICE.md'
            excludes += 'META-INF/LICENSE.md'
            excludes += 'META-INF/LICENSE-notice.md'
            excludes += 'mockito-extensions/org.mockito.plugins.MemberAccessor'
        }
    }

}

dependencies {

    //region Support Packages
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.22')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.7'
    implementation 'androidx.activity:activity-compose:1.10.0'
    implementation platform('androidx.compose:compose-bom:2025.01.00')
    implementation "androidx.navigation:navigation-compose:2.8.5"
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    //    // Optional - Integration with LiveData
    implementation "androidx.compose.runtime:runtime-livedata:1.7.6"

    //endregion

    /*
    //region Testing package
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    //endregion
    */


    implementation project(":WeatherGiniSDK")

    //region Documentation

    implementation("org.jetbrains.dokka:dokka-gradle-plugin:2.0.0")
    dokkaPlugin 'org.jetbrains.dokka:android-documentation-plugin:2.0.0'
    // Is applied universally
    dokkaPlugin 'org.jetbrains.dokka:mathjax-plugin:2.0.0'

    // Is applied for the single-module dokkaHtml task only
    dokkaHtmlPlugin 'org.jetbrains.dokka:kotlin-as-java-plugin:2.0.0'

//    // Is applied for HTML format in multi-project builds
//    dokkaHtmlPartialPlugin 'org.jetbrains.dokka:kotlin-as-java-plugin:2.0.0'

    dokka(project(":WeatherGiniSDK:"))

    //endregion

}

subprojects {
    apply plugin: 'org.jetbrains.dokka'
}

dokka {
    moduleName.set("App")
    dokkaPublications.html {
        outputDirectory.set(layout.buildDirectory.dir("dokkaDir"))
    }

    dokkaSourceSets.main {
        // Only set the actual Kotlin/Java dirs once
        sourceRoots.from("src/main/java")
//    dokkaSourceSets.named("main") {
        includes.from("IntegrationGuide.md")
        skipEmptyPackages.set(true)
//        includeNonPublic.set(false)
//        includes.from("IntegrationGuide.md")
        sourceLink {
//            localDirectory.set(file("src/main/java"))
            remoteUrl("https://github.com/adhamkhwaldeh/WeatherSdk/tree/main/app/src/main/java")
            remoteLineSuffix.set("#L")
        }

        reportUndocumented.set(true)          // Warn about undocumented public APIs
        skipDeprecated.set(true)              // Exclude deprecated elements
        suppress.set(false)                   // Include suppressed elements
        sourceRoots.from(file("src/main/java"))
        sourceRoots.from("src/main/java")
        jdkVersion.set(17)
    }

}
