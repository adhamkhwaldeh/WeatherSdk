plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.dokka' //version "2.0.0"
}

android {
    namespace 'com.adham.gini.weatherSDK'
    compileSdk 33

    defaultConfig {
        applicationId "com.adham.gini.weatherSDK"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }


}

dependencies {

    //region Support Packages
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation "androidx.navigation:navigation-compose:2.6.0"
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    //    // Optional - Integration with LiveData
    implementation "androidx.compose.runtime:runtime-livedata:1.5.1"

    //endregion

    //region Testing package
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    //endregion

    implementation project(":WeatherGiniSDK")

    //region Documentation

    implementation("org.jetbrains.dokka:dokka-gradle-plugin:2.0.0")
    dokka(project(":WeatherGiniSDK:"))

    //endregion

}


dokka {
    dokkaPublications.html {
        outputDirectory.set(layout.buildDirectory.dir("dokkaDir"))
    }
    moduleName.set("Project Name")
    dokkaSourceSets.main {
        includes.from("README.md")
        sourceLink {
            localDirectory.set(file("src/main/kotlin"))
//            remoteUrl("https://example.com/src")
            remoteLineSuffix.set("#L")
        }
    }
    pluginsConfiguration.html {
        customStyleSheets.from("styles.css")
        customAssets.from("logo.png")
        footerMessage.set("(c) Your Company")
    }
//    // Dokka generates a new process managed by Gradle
//    dokkaGeneratorIsolation = ProcessIsolation {
//        // Configures heap size
//        maxHeapSize = "4g"
//    }
//    // Runs Dokka in the current Gradle process
//    dokkaGeneratorIsolation = ClassLoaderIsolation()
}

//dokka {
//    outputDirectory.set(buildDir.resolve("dokka")) // Output folder
//    plugins {
//        // Add specific plugins if needed (e.g., for linking with Javadoc or Markdown output)
//    }
//    dokkaSourceSets {
//        configureEach {
//            includes.from("docs/documentation.md") // Include custom documentation
//            reportUndocumented.set(true)          // Warn about undocumented public APIs
//            skipDeprecated.set(true)              // Exclude deprecated elements
//            suppress.set(false)                   // Include suppressed elements
//            sourceRoots.from(file("src/main/java"), file("src/main/kotlin"))
//            jdkVersion.set(17)                    // Set the Java version
//        }
//    }
//}

//dokka {
//    moduleName.set("Project Name")
//    dokkaPublications.html {
//        outputDirectory.set(layout.buildDirectory.dir("dokkaDir"))
//    }
////    outputFormat.set("html") // Supported formats: html, gfm, javadoc, markdown
////    outputDirectory.set(buildDir.resolve("dokka"))
//    dokkaSourceSets.main {
//        includes.from("README.md")
//        sourceLink {
//            localDirectory.set(file("src/main/kotlin"))
////            localDirectory.set(file("src/main/java"))
////            remoteUrl("https://example.com/src")
////            remoteLineSuffix.set("#L")
//        }
//    }
//    pluginsConfiguration.html {
//        customStyleSheets.from("styles.css")
//        customAssets.from("logo.png")
//        footerMessage.set("(c) Your Company")
//    }
//}


//dokka {
//    outputFormat.set("html") // Supported formats: html, gfm, javadoc, markdown
//    outputDirectory.set(buildDir.resolve("dokka"))
//
//    dokkaSourceSets {
//        configureEach {
//            includeNonPublic.set(false) // Exclude private/internal APIs
//            skipDeprecated.set(true)   // Exclude deprecated APIs
//            reportUndocumented.set(true) // Warn about undocumented members
//            jdkVersion.set(8)           // Set the JDK version used
//        }
//    }
//
//    dokkaSourceSets {
//        named("main") {
//            kotlinSrcDirs.from("src/main/java", "src/main/kotlin")
//            noAndroidSdkLink.set(false) // Link Android SDK documentation
//            includes.from("docs/documentation.md") // Add custom documentation
//        }
//    }
//
//}
